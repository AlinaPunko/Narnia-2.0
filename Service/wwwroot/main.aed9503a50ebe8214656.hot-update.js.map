{"version":3,"sources":["webpack:///./src/components/SignUpPage/signUpPage.jsx"],"names":["SignUpPage","props","context","event","setState","name","target","value","birthdate","password","confirmedPassword","phone","address","email","photo","e","preventDefault","validator","allValid","userData","state","localStorageHelper","getRole","role","serviceWrapper","callService","signUpService","signUpAdmin","errorFieldRef","result","signUp","dbeugger","alert","addId","id","addRole","addToken","token","redirectHelper","redirectToHomePage","history","showMessages","forceUpdate","messages","message","signUpValidationConfig","fieldName","rule","SimpleReactValidator","React","createRef","changeName","changeEmail","changeAddress","changePassword","changeConfirmedPassword","changePhone","changeBirthdate","changePhoto","renderValidationResult","PureComponent","PropTypes","shape","length","number","isRequired","action","string","location","pathname","search","hash","key","push","func","withRouter"],"mappings":"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","file":"main.aed9503a50ebe8214656.hot-update.js","sourcesContent":["import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport SimpleReactValidator from 'simple-react-validator';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Input from 'components/common/Input/input';\r\nimport PhotoSelector from 'components/common/PhotoSelector/photoSelector';\r\nimport signUpValidationConfig from 'validationConfigs/signUpValidationConfig';\r\nimport serviceWrapper from 'helpers/serviceWrapper';\r\nimport signUpService from 'services/signUpService';\r\nimport redirectHelper from 'helpers/redirectHelper';\r\nimport localStorageHelper from 'helpers/localStorageHelper';\r\n\r\nimport './signUpPage.scss';\r\n\r\nclass SignUpPage extends React.PureComponent {\r\n    static propTypes = {\r\n        history: PropTypes.shape({\r\n            length: PropTypes.number.isRequired,\r\n            action: PropTypes.string.isRequired,\r\n            location: PropTypes.shape({\r\n                pathname: PropTypes.string.isRequired,\r\n                search: PropTypes.string.isRequired,\r\n                hash: PropTypes.string.isRequired,\r\n                key: PropTypes.string.isRequired\r\n            }),\r\n            push: PropTypes.func.isRequired\r\n        }).isRequired\r\n    }\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        this.validator = new SimpleReactValidator();\r\n        this.errorFieldRef = React.createRef();\r\n        this.state = {\r\n            photo: '',\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            address: '',\r\n            password: '',\r\n            confirmedPassword: '',\r\n            birthdate: '',\r\n            role: 'user'\r\n        };\r\n    }\r\n\r\n    changeName = (event) => {\r\n        this.setState({\r\n            name: event.target.value\r\n        });\r\n    }\r\n\r\n    changeBirthdate = (event) => {\r\n        this.setState({\r\n            birthdate: event.target.value\r\n        });\r\n    }\r\n\r\n    changePassword = (event) => {\r\n        this.setState({\r\n            password: event.target.value\r\n        });\r\n    }\r\n\r\n    changeConfirmedPassword = (event) => {\r\n        this.setState({\r\n            confirmedPassword: event.target.value\r\n        });\r\n    }\r\n\r\n    changePhone = (event) => {\r\n        this.setState({\r\n            phone: event.target.value\r\n        });\r\n    }\r\n\r\n    changeAddress = (event) => {\r\n        this.setState({\r\n            address: event.target.value\r\n        });\r\n    }\r\n\r\n    changeEmail = (event) => {\r\n        this.setState({\r\n            email: event.target.value\r\n        });\r\n    }\r\n\r\n    changePhoto = (photo) => {\r\n        this.setState({ photo });\r\n    }\r\n\r\n    signUp = async (e) => {\r\n        e.preventDefault();\r\n        if (this.validator.allValid()) {\r\n            const userData = { ...this.state };\r\n            let result;\r\n            if (localStorageHelper.getRole() === 'admin') {\r\n                userData.role = 'admin';\r\n                result = await serviceWrapper.callService(signUpService.signUpAdmin, userData, this.errorFieldRef);\r\n            } else {\r\n                userData.role = 'user';\r\n                result = await serviceWrapper.callService(signUpService.signUp, userData, this.errorFieldRef);\r\n            }\r\n            dbeugger\r\n            if (result) {\r\n                alert('Success');\r\n                localStorageHelper.addId(result.id);\r\n                localStorageHelper.addRole(result.role);\r\n                localStorageHelper.addToken(result.token);\r\n                redirectHelper.redirectToHomePage(this.props.history);\r\n            }\r\n        } else {\r\n            this.validator.showMessages();\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    renderValidationResult = () => {\r\n        const messages = [\r\n            this.validator.message(signUpValidationConfig.email.fieldName, this.state.email, signUpValidationConfig.email.rule),\r\n            this.validator.message(signUpValidationConfig.password.fieldName, this.state.password, signUpValidationConfig.password.rule),\r\n            this.validator.message(signUpValidationConfig.name.fieldName, this.state.name, signUpValidationConfig.name.rule),\r\n            this.validator.message(signUpValidationConfig.phone.fieldName, this.state.phone, signUpValidationConfig.phone.rule),\r\n            this.validator.message(signUpValidationConfig.address.fieldName, this.state.address, signUpValidationConfig.address.rule),\r\n            this.validator.message(\r\n                signUpValidationConfig.confirmedPassword.fieldName,\r\n                this.state.confirmedPassword,\r\n                signUpValidationConfig.confirmedPassword.rule(this.state.password)\r\n            )\r\n        ];\r\n\r\n        return (\r\n            <div className=\"sign-up-page__validation-result\" ref={this.errorFieldRef}>\r\n                {messages}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"sign-up-page\">\r\n                <h1 className=\"sign-up-page__title\">Sign up</h1>\r\n                <form className=\"sign-up-page__form\" onSubmit={this.signUp}>\r\n                    <Input name=\"name\" type=\"text\" label=\"Name:\" onChange={this.changeName} value={this.state.name} />\r\n                    <Input name=\"email\" type=\"email\" label=\"E-mail:\" onChange={this.changeEmail} value={this.state.email} />\r\n                    <Input name=\"address\" type=\"text\" label=\"Address:\" onChange={this.changeAddress} value={this.state.address} />\r\n                    <Input name=\"password\" type=\"password\" label=\"Password:\" onChange={this.changePassword} value={this.state.password} />\r\n                    <Input\r\n                        name=\"confirmedPassword\"\r\n                        type=\"password\"\r\n                        label=\"Confirm password:\"\r\n                        onChange={this.changeConfirmedPassword}\r\n                        value={this.state.confirmedPassword}\r\n                    />\r\n                    <div className=\"sign-up-page__field\">\r\n                        <label className=\"sign-up-page__field-title\">Phone: </label>\r\n                        <input\r\n                            name=\"phone\"\r\n                            type=\"tel\"\r\n                            pattern=\"375[0-9]{2}[0-9]{7}\"\r\n                            value={this.state.phone}\r\n                            className=\"sign-up-page__field-input\"\r\n                            onChange={this.changePhone}\r\n                        />\r\n                    </div>\r\n                    <Input name=\"birthdate\" type=\"date\" label=\"Select birthdate:\" onChange={this.changeBirthdate} value={this.state.birthdate} />\r\n                    <PhotoSelector onChange={this.changePhoto} />\r\n                    {\r\n                        this.renderValidationResult()\r\n                    }\r\n                    <button type=\"submit\" className=\"sign-up-page__form-button\">Sign Up</button>\r\n                </form>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(SignUpPage);\r\n"],"sourceRoot":""}