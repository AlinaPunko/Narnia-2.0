{"version":3,"sources":["webpack:///./src/components/ordersPage/UserOrdersSection/userOrdersSection.jsx"],"names":["UserOrdersSection","orderService","setByUserId","localStorageHelper","getId","result","setState","orders","isLoading","state","preloader","length","renderOrders","React","PureComponent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAEA;AACA;;IAEqBA,iB;;;;;AACjB,+BAAc;AAAA;;AAAA;;AACV;;AADU,6IAQM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACKC,6DAAY,CAACC,WAAb,CAAyBC,kEAAkB,CAACC,KAAnB,EAAzB,CADL;;AAAA;AACVC,oBADU;;AAEhB,oBAAKC,QAAL,CAAc;AACVC,sBAAM,EAAEF,MADE;AAEVG,yBAAS,EAAE;AAFD,eAAd;;AAFgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KARN;;AAAA,mEAgBC,YAAM,CAEpB,CAlBa;;AAEV,UAAKC,KAAL,GAAa;AACTF,YAAM,EAAE,EADC;AAETC,eAAS,EAAE;AAFF,KAAb;AAFU;AAMb;;;;6BAcQ;AACL,UAAI,KAAKC,KAAL,CAAWD,SAAf,EAA0B;AACtB,eACI;AAAK,mBAAS,EAAC;AAAf,WACI,2DAAC,mEAAD;AAAM,uBAAa,EAAC,qCAApB;AAA0D,cAAI,EAAEE,kEAASA;AAAzE,UADJ,CADJ;AAKH;;AAED,aACI;AAAS,iBAAS,EAAC;AAAnB,SACI;AAAI,iBAAS,EAAC;AAAd,qBADJ,EAEK,KAAKD,KAAL,CAAWF,MAAX,CAAkBI,MAAlB,KAA6B,CAA7B,IAAmC;AAAI,iBAAS,EAAC;AAAd,4CAFxC,EAGI;AAAO,iBAAS,EAAC;AAAjB,SACK,KAAKC,YAAL,EADL,CAHJ,CADJ;AASH;;;;EAvC0CC,4CAAK,CAACC,a","file":"main.a930d93207ac10df31ff.hot-update.js","sourcesContent":["import React from 'react';\r\n\r\nimport localStorageHelper from 'helpers/localStorageHelper';\r\nimport orderService from 'services/orderService';\r\nimport Icon from 'components/common/Icon/icon';\r\n\r\nimport preloader from 'styles/icons/preloader.svg';\r\nimport './userOrdersSection.scss';\r\n\r\nexport default class UserOrdersSection extends React.PureComponent {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            orders: [],\r\n            isLoading: true\r\n        };\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        const result = await orderService.setByUserId(localStorageHelper.getId());\r\n        this.setState({\r\n            orders: result,\r\n            isLoading: false\r\n        });\r\n    }\r\n\r\n    renderOrders = () => {\r\n\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <div className=\"user-orders-section__preloader\">\r\n                    <Icon iconClassName=\"user-orders-section__preloader-icon\" icon={preloader} />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <section className=\"user-orders-section\">\r\n                <h1 className=\"user-orders-section__title\">My orders</h1>\r\n                {this.state.orders.length === 0 && (<h2 className=\"user-orders-section__title\">You haven't bougth any books yet</h2>)}\r\n                <table className=\"user-orders-section__orders\">\r\n                    {this.renderOrders()}\r\n                </table>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n"],"sourceRoot":""}